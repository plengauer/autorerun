name: 'autorerun'
description: 'automatically rerun workflows that have failed due to ratelimits'
inputs:
  github_token:
    description: 'API Token for Github'
    required: true
runs:
  using: "composite"
  steps:
    - name: "Search and rerun jobs"
      shell: bash
      env:
        GITHUB_TOKEN: ${{ inputs.github_token }}
      run: |
        gh_curl() {
          curl --no-progress-meter -H "Authorization: Bearer $GITHUB_TOKEN" "${GITHUB_API_URL:-https://api.github.com}"/repos/"$GITHUB_REPOSITORY""$@"
        }
        export -f gh_curl

        gh_curl_paginated() {
          {
            gh_curl "$@" --head | grep '^link: ' | cut -d ' '  -f 2- | tr -d ' <>' | tr ',' '\n' \
              | grep 'rel="last"' | cut -d ';' -f1 | cut -d '?' -f 2- | tr '&' '\n' \
              | grep '^page=' | cut -d = -f 2 \
              | xargs seq 1 || true
          } | while read -r page; do echo "$@"'&page='"$page"; done | xargs parallel gh_curl :::
        }

        should_rerun() {
          sed -e ':a' -e '/\\wsl.exe --update$/ { N; s/\n//; ba }' | grep -E 'connection timeout
        timeout expired
        connection reset by peer
        econnreset
        500 internal server error
        internal server error \(500\)
        500 internal error
        internal error \(500\)
        429 too many requests
        too many requests \(429\)
        rate limit exceeded
        rate limit hit
        toomanyrequests
        error 403: server failed to authenticate the request\. make sure the value of authorization header is formed correctly including the signature\.
        \\wsl\.exe --update.*forbidden \(403\)
        unable to fetch some archives
        e: failed to fetch http:.*\.deb  403  forbidden
        solution .*: downgrade of .* to .*
        is temporarily unaccessible
        docker: error response from daemon: failed to create task for container: failed to create shim task: oci runtime create failed: runc create failed: unable to start container process: unable to apply cgroup configuration:
        cannot connect to the docker daemon at unix:///var/run/docker\.sock. is the docker daemon running
        qemu: uncaught target signal 11 \(segmentation fault\) - core dumped
        <p><b>404\.</b> <ins>thatâ€™s an error\.</ins>' > /dev/null
        }

        if [ "$GITHUB_EVENT_NAME" = 'workflow_run' ] && [ -r "$GITHUB_EVENT_PATH" ]; then
          cat "$GITHUB_EVENT_PATH" | jq --unbuffered .workflow_run
        else
          gh_curl_paginated /pulls'?state=open&per_page=100' | jq --unbuffered -r .[].head.ref | while read -r branch; do
            gh_curl_paginated /actions/workflows'?per_page=100' | jq --unbuffered -r .workflows[].id | while read -r workflow_id; do echo "$branch" "$workflow_id"; done
          done | while read -r branch workflow_id; do
            gh_curl /actions/workflows/"$workflow_id"/runs'?'branch="$branch"'&per_page=1' | jq --unbuffered '.workflow_runs[0]' | { grep -v '^null$' || true; }
          done
        fi | jq --unbuffered -r '. | select(.conclusion == "failure") | select(.run_attempt < 100) | [ .id, .run_attempt ] | @tsv' | sed 's/\t/ /g' | tee /dev/stderr | while read -r run_id run_attempt; do
          gh_curl_paginated /actions/runs/"$run_id"/attempts/"$run_attempt"/jobs'?per_page=100'
        done | jq --unbuffered '.jobs[] | select(.conclusion == "failure") | [ .run_id, .id ] | @tsv' | sed 's/\t/ /g' | tee /dev/stderr | while read -r run_id job_id; do
          [ "${last_run_id:-}" != "$run_id" ] && gh_curl /actions/jobs/"$job_id"/logs -L | cut -d ' ' -f 2- | tr '[:upper:]' '[:lower:]' | tr -d '\r' | tr -d '\000' | should_rerun && echo "$run_id" "$job_id" && last_run_id="$run_id" || true
        done | while read -r run_id job_id; do
          if [ -n "$job_id" ]; then
            echo "::notice ::Autorerunning ${GITHUB_API_URL:-https://api.github.com}/actions/jobs/$job_id"
            gh_curl /actions/jobs/"$job_id"/rerun -X POST
          else
            echo "::notice ::Autorerunning ${GITHUB_API_URL:-https://api.github.com}/actions/runs/$run_id"
            gh_curl /actions/runs/"$run_id"/rerun-failed-jobs -X POST
          fi
        done
